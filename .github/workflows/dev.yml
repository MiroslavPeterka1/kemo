name: Merge DEV
on: 
  pull_request:
    branches: ['dev']
  push:
    # branches: ['dev'] //TODO: remove after testing

    # dudělat proměné, do které se bude ukládat link na issue a tuto proměnnou použít pokud nalněna, tak ukončit nějak s chybou

jobs:
  format-files:
    runs-on: ubuntu-latest
    steps:
      
      - uses: actions/checkout@v2
      - uses: dart-lang/setup-dart@v1
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '2.10.1'
          channel: 'stable'
      - name: Install dependencies
        run: flutter pub get

      - name: Verify formatting dart
        continue-on-error: true
        run: |
          libFiles=`find ./lib/ -type f -not -regex ".*\.\(freezed\|gr\|g\).dart" -not -name "*.arb"`
          for file in $libFiles
          do
              dart format --line-length 100 --output=none --set-exit-if-changed $file
          done
        if: failure()
      - uses: dblock/create-a-github-issue@v3
        id: create-issue-format
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: 'echo number: ${{ steps.create-issue-format.outputs.number }}'
      - run: 'echo status: ${{ steps.create-issue-format.outputs.status }}'
      - run: 'echo url: ${{ steps.create-issue-format.outputs.url }}'
      - name: Job result
        run: |
          if [[ ${{ steps.create-issue-format.outputs.number }} == '' ]]; then exit 0; else exit 1; fi
        
      
          


  # lint-analyze:
  #   runs-on: ubuntu-latest
  #   steps:

  #     - uses: actions/checkout@v2
  #     - uses: dart-lang/setup-dart@v1
  #     - uses: subosito/flutter-action@v2
  #       with:
  #         flutter-version: '2.10.1'
  #         channel: 'stable'
  #     - name: Install dependencies
  #       run: flutter pub get       
  #     - uses: invertase/github-action-dart-analyzer@v1
  #       with:
  #         fatal-infos: true
  #         fatal-warnings: true
  #         annotate: true
  #         annotate-only: false
  #         working-directory: ./
      #   if: failure()
      # - uses: dblock/create-a-github-issue@v3
      #   id: create-issue-lint
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # - run: 'echo number: ${{ steps.create-issue-lint.outputs.number }}'
      # - run: 'echo status: ${{ steps.create-issue-lint.outputs.status }}'
      # - run: 'echo url: ${{ steps.create-issue-lint.outputs.url }}'

  # remove-originalbranch:
  #   runs-on: ubuntu-latest
  #   needs: ['format-files', 'lint-analyze'] // spustí se až po doběhnutí předchozích kroků

#  test:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - uses: dart-lang/setup-dart@v1
#      - uses: subosito/flutter-action@v2
#        with:
#          flutter-version: '2.5.3'
#          channel: 'stable'
#
#      - name: Install dependencies
#        run: flutter pub get
#
#      - name: Copy .env.example into .env file
#        run: |
#          cp ./assets/.env.example ./assets/.env
#
#      - name: Run tests flutter
#        run: flutter test